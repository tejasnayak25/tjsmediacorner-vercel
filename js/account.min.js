import{initializeApp}from"https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js";import{getAnalytics}from"https://www.gstatic.com/firebasejs/10.12.5/firebase-analytics.js";import{getAuth,deleteUser,updateProfile,sendPasswordResetEmail}from"https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js";import{ref,getStorage,uploadBytes,getDownloadURL,listAll,deleteObject}from"https://www.gstatic.com/firebasejs/10.12.5/firebase-storage.js";import{getFirestore,collection,doc,getDoc,getDocs,query,deleteDoc}from"https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js";const firebaseConfig={apiKey:"AIzaSyApnRlgC2Gs5r8VjIE4BmjwmwGU9Fm0ZfQ",authDomain:"tjsmediacorner.firebaseapp.com",projectId:"tjsmediacorner",storageBucket:"tjsmediacorner.appspot.com",messagingSenderId:"1062875689510",appId:"1:1062875689510:web:85316c405458e37a1cace7",measurementId:"G-BPTP2W4DMH"};const app=initializeApp(firebaseConfig);const analytics=getAnalytics(app);const auth=getAuth();const storage=getStorage();const firestore=getFirestore();const membershipCollection=collection(firestore,"memberships");let pfp=document.getElementById("pfp-image");let name=document.getElementById("display-name");let email=document.getElementById("email");let pfpInput=document.getElementById("profile-picture");let pfpBtn=document.getElementById("pfp-btn");let deleteBtn=document.getElementById("delete-btn");let updateBtn=document.getElementById("update-btn");let pfpLoading=document.getElementById("pfp-loading");let logoutBtn=document.getElementById("logout-btn");let resetPassBtn=document.getElementById("password-reset-btn");let noSubscription=document.getElementById("no-subscriptions");let subscriptionsHolder=document.getElementById("subscriptions-holder");let purchased_credits=document.getElementById("purchased_credits");let ad_credits=document.getElementById("ad_credits");let photo=null,isSystem=false;auth.onAuthStateChanged((async user=>{if(!user){window.location.href="/login"}else{pfp.src=user.photoURL;name.value=user.displayName;email.value=user.email;if(!user.photoURL){let avatarId=email.value.split("@")[0];let res=await fetch(`https://api.multiavatar.com/${avatarId}.png`);let blob=await res.blob();photo=blob;let url=URL.createObjectURL(blob);pfp.src=url}if(!user.displayName){name.value=user.email.split("@")[0]}pfpBtn.onclick=()=>{pfpInput.click()};pfpInput.onchange=e=>{let file=e.target.files[0];let url=URL.createObjectURL(file);pfp.src=url;photo=file};updateBtn.onclick=async()=>{let path="";console.log(photo);if(photo){pfpLoading.classList.replace("hidden","flex");await new Promise(((resolve,reject)=>{let picName=photo.name;if(picName){picName=picName.split(".");picName[0]="profile";picName=picName.join(".")}else{picName=`profile.${photo.type.split("image/")[1]}`}var storageRef=ref(storage,user.uid+"/profilePicture/"+picName);const metadata={contentType:photo.type};uploadBytes(storageRef,photo,metadata).then((snapshot=>{pfpLoading.classList.replace("flex","hidden");getDownloadURL(snapshot.ref).then((downloadURL=>{path=downloadURL;resolve()}))})).catch((err=>{console.log(err)}))}))}updateProfile(auth.currentUser,{displayName:name.value,photoURL:photo?path:user.photoURL}).then((()=>{if(!isSystem){alertwindow.message="Profile updated successfully!";alertwindow.btns=[];alertwindow.show()}else{isSystem=false}photo=null})).catch((error=>{if(!isSystem){alertwindow.message="Profile update failed!";alertwindow.btns=[];alertwindow.show()}else{isSystem=false}}))};deleteBtn.onclick=()=>{let proceedBtn=document.createElement("button");proceedBtn.className="btn btn-error rounded-full px-10";proceedBtn.innerText="Proceed";proceedBtn.onclick=async()=>{try{let userdoc=doc(firestore,"users",user.email);await deleteDoc(userdoc);const storageRef=ref(storage,user.uid+"/profilePicture");listAll(storageRef).then((listResults=>{const promises=listResults.items.map((item=>deleteObject(item)));Promise.all(promises).then((()=>{deleteUser(auth.currentUser).then((()=>{window.location.href="/login"})).catch((error=>{console.log(error)}))}))}))}catch(e){console.log(e)}};alertwindow.message="Are you sure you want to delete your account?";alertwindow.btns=[proceedBtn];alertwindow.show()};logoutBtn.onclick=()=>{auth.signOut().then((()=>{window.location.href="/login"}))};document.querySelector(".nav-active #logout-btn-2").onclick=()=>{auth.signOut().then((()=>{window.location.href="/login"}))};resetPassBtn.onclick=async()=>{try{await sendPasswordResetEmail(auth,user.email);alertwindow.message="Email has been sent";alertwindow.btns=[];alertwindow.show()}catch(e){console.log(e);alertwindow.message="There was an error while sending email. Kindly try again later.";alertwindow.btns=[];alertwindow.show()}};if(!user.displayName||!user.photoURL){isSystem=true;updateBtn.click()}let memberships=await getDocs(query(membershipCollection));memberships=memberships.docs.map((item=>({id:item.id,data:item.data()})));let userdoc=doc(firestore,"users",user.email);const docSnap=await getDoc(userdoc);if(docSnap.exists()){let data=docSnap.data();let subscriptions=data.subscriptions;purchased_credits.value=data.purchased_credits;let subapps=memberships.filter((item=>subscriptions.includes(item.id)));if(subapps.length>0){let text="";for(const app of subapps){text+=`<a href="${app.data.url}"><img src="${app.data.image}" class="w-16 aspect-square rounded-full cursor-pointer" alt="${app.id}"></a>`}noSubscription.classList.add("hidden");subscriptionsHolder.innerHTML=text;subscriptionsHolder.classList.replace("hidden","flex")}}else{console.log("No such document!")}}}));